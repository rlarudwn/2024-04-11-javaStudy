/*
 		1. 	변수	=> 한개의 데이터를 저장하는 메모리 공간	=> 변경가능	=> 외부에서 계속 변경되는 데이터를 찾음
 														=> 데이터형 변수 = 값
 			상수	=> 한개의 데이터를 저장하는 메모리 공간	=> 변경불가
 											=> final 데이터형 변수 = 값
 											=> 대문자로 되어 있다.
 												=> IP
 		2. 데이터형 (기본형)		=> 저장범위, 메모리 크기
 		
 		================================================================================
 		정수형
 			byte	=> 1byte	=> -128 ~ 127		=> 네트워크 전송시에 주로 사용 (업로드, 다운로드)
 					=> byte b = 10; / byte b; b = 10;
 			int		=> 4byte	=> -21억4천 ~ 21억 4천	=> 모든 정수형의 기본형 
 						=> 가장 많이 사용 (웹	=> 숫자: int)
 						회원 / 게시판	=> 게시물번호, 조회수 나이 등
 					=> int i = 10; / int i; i = 10;
 			long	=> 8byte	=> 최근(빅데이터)	=> AI
 					=> long l = 10; / long l; l = 10;
 		================================================================================
 		실수형
 			double	=> 8byte	=> 평균, 평점등
 					=> 실수형의 기본
 		================================================================================
 		문자형
 			char	=> 2byte (0 ~ 65535)	=> 각국의 언어 사용이 가능 (Unicode)
 					=> 문자 한개를 저장
 					** 	연산시 정수로 변경
 						연산처리가 될 때 연산은 같은 데이터형끼리만 연산된다
 					
 						10 + 10.5
 					=>	10.0 + 10.5
 					
 						'A' + 1
 					=>	65 + 1
 		================================================================================
 		논리형
 			boolean	=> 1byte (1 = true, 0 = false)
 				=> 조건이 있는 경우
 		================================================================================
 		여러개의 초기값 설정
 		
 		int a = 10;
 		int b = 20;
 		int c = 30;
 		
 		int a = 10, b = 20, c = 30;
 		=> 같은 변수일 경우 가능
 		 
 		변수의 명칭
 		1) 알파벳, 한글로 시작 (알파벳 대소문자 구분)
 		2) 숫자 사용 가능 (맨 앞은 사용 금지)
 		3) 키워드는 사용할 수 없다 (java에서 이미 사용중인 이름)
 		4) 특수문자는 _, $ 두가지만 사용가능
 		5) 공백 사용 금지
 		
 		데이터 크기
 		byte < char < int < long < double
 		boolean 은 예외
 		
 		데이터 교환은 반드시 임시변수 설정
 		int a = 10;
 		int b = 20;
 		int temp = a;
 		a = b;
 		b = temp;
 		
 		**변수에 값을 대입할 때
 		byte b = (byte);
 		char c = (char, int);
 		int i = (byte, char, int);
 		long l = (byte, char, int, long);
 		double d = (byte, char, int, long, double);
 		
 		작은 데이터형을 대입하면 자동으로 변경된다.
 		
 		char c = 65		=> c = 'A'
 		int a = 'A'		=> a = 65
 		long l = 10		=> l = 10l
 		double d = 'A'	=> d = 65.0
 		
 */

package chapter02;

public class 변수_9 {

	public static void main(String[] args) {
		System.out.println(Byte.MAX_VALUE);
		System.out.println(Byte.MIN_VALUE);

	}

}
