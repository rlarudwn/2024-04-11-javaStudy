/*
 		1. 자바언어는 클래스로 시작 클래스로 종료
 		2. public static void main(String[] args)	=> main = 프로그램의 시작점
 			=> main이 없는 경우 프로그램이 실행되지 않는다
 			=> 실행시 main을 찾는다
 		3. 구조
 		public class classname{
 			public static void main(String[] args){
 				코딩	=> 문법 	-> 예외처리
 			}
 		}
 		기본적인 자바 용어
 		1. 자바	=> .java	=> 원시소스(프로그래머가 알아보는 소스)
 					------> 컴퓨터가 알 수 있게 변경(번역)	=> 컴파일
 					.class	=> 바이트 코드(컴퓨터가 알 수 있는 언어)
 		자바 실행
 		코드작성		=>			
 				기계어 변경(컴파일)				자바 실행환경(JDK -> JVM)
 		a.java					a.class								=> 소스를 한줄씩 읽어서 실행(인터프리터)
 					javac						java
 		
 		컴파일 방식 : Java / C / C++ / C#
 		인터프리터 방식 : HTML, CSS, Java
 		
 		java 	=> SW	=> 고급언어
 		C / C++	=> HW	=> 저급언어
 		
 		B	=> C	=>	C++		=> Java(기반 C / C++)
 									C / C++의 어려운 부분을 제외
 									구조체 / 포인터	=> 주소개념이 없다
 		Java	=> .exe.를 만들지 못한다 (단점)
 			=> 브라우저, 핸드폰	=> 웹, 앱		=> 안드로이드(SDK, NDK)
 										웹 프로그래머
 										
 										JSP	=> Java		=> 80
 										ASP	=> C#		=> 15
 										PHP	=> Script	=> 5
 		자바언어 특징
 		1. 객체 지향 프로그램
 			유지보수 : 수정, 추가, 재사용, 데이터보호
 					-------	 ----- --------
 						|	   |	  |
 						|	   | 	  => 캡슐화 (은닉화)
 						|	   => 상속	=> 확장
 						=> 다형성 (오버라이딩(modify) / 오버로딩(new))
 		2. 자바 가상머신(JVM) : 모든 운영체제 호환 가능
 			사용자
 			 |
 			JVM		=> 운영체제 연결	=> API	=> Write ONE
 			 |
 			운영체제
 			 |
 			하드웨어
 			
 		메모리 구조
 		-----------------------------
			Method 영역 / static 변수
 		-----------------------------
 			stack : 메모리 자체 관리
 					지역변수 / 매개변수
 		-----------------------------
 			프로그래머가 관리 하는 영역
 			Heap : 멤버변수, 클래스, 배열
 		-----------------------------
 		멀티쓰레드를 이용한다(main -> 쓰레드)
 			한개 실행파일에서 여러개의 기능을 동시에 수행
 		
 		주석 		: 프로그램과 상관없이 코드에 설명을 붙임
 			여러줄 / 한줄
 		변수	 	: 메모리에 저장	=> 한개의 데이터
 		메소드	 : 자용자가 요청시 처리하는 기능
 					=> 기능을 분리하는 역할, 다른 클래스와 연결
 		예약어 	: 이미 자바에서 사용하는 단어
 		초기화 	: 데이터를 저장할 때 부여하는 값
 		상수		: 고정된 값	=> 도중에 변경 불가능		final
 		
 							  		
 */

package chapter_01_03_정리;

public class _01_자바실행_구조 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
